<?php
			
// Required Tropo files

require 'res/tropo.class.php';

// Limonade files for states simulation. More information in 

require 'res/lib/limonade.php';

// Defining constants

$hour;
$day;
$month;
$people;
define("userNumber","+34656422095");
define("userEmail","totemteleko@gmail.com");
define("year",2012);

// Declaration of the states

// State START implementation

dispatch_post('/START', 'app_START');
function app_START() {
	
	
	// Creates a Tropo session and getting its parameters
	if(!isset($_SESSION['caller_dime'])){
	$session_dime = new Session();
	$from_dime = $session_dime->getFrom();
	$sessionID_dime = $session_dime->getId();
	$caller_dime = $from_dime["id"]; 
	$to_dime = $session_dime->getTo();
	$called_dime = $to_dime["id"]; 
	$_SESSION['caller_dime']=$caller_dime;
	$_SESSION['called_dime']=$called_dime;
	$_SESSION['sessionID_dime']=$sessionID_dime;
	}
	
	
	
	// Times signal appears when the param reached the atribute times of the state
	
	if(isset($_SESSION['times_START_dime'])){
	$attempts=intval($_SESSION['times_START_dime']);
	$attempts++;
	$_SESSION['times_START_dime']=$attempts;
			
		
	}else{
		$_SESSION['times_START_dime']=0;
	}
	
	
	// Inicialize the tropo aplication
	
	$tropo = new Tropo();
	
	if(isset($_SESSION['lastState_dime'])){
		@$result_dime=new Result();
	}
	// Update of the value of the global constants and variables, and the session params.
	
	if(isset($_SESSION['month'])){
		$month=$_SESSION['month'];
	} 
	if(isset($_SESSION['day'])){
		$day=$_SESSION['day'];
	} 
	if(isset($_SESSION['hour'])){
		$hour=$_SESSION['hour'];
	} 
	if(isset($_SESSION['people'])){
		$people=$_SESSION['people'];
	} 
	
	// Declaration of the statements of the state.
	
	$tropo->say("Bienvenido al servicio de atencion especial de restaurantes de Telcodev.", array("voice"=>"leonor", "allowSignals"=>array("attemptsLimitSTART")));
	$tropo->on(array("event" => "continue", "next" =>"restaurant.php?uri=ISCLIENT"));
	
	// Update the global variables and the session params.
	
	if(isset($month)){
		$_SESSION['month']=$month;
	}
	if(isset($day)){
		$_SESSION['day']=$day;
	}
	if(isset($hour)){
		$_SESSION['hour']=$hour;
	}
	if(isset($people)){
		$_SESSION['people']=$people;
	}
	$_SESSION['lastState_dime']='START';
	return $tropo->RenderJson();
}
// State ISCLIENT implementation

dispatch_post('/ISCLIENT', 'app_ISCLIENT');
function app_ISCLIENT() {
	
	
	// Creates a Tropo session and getting its parameters
	if(!isset($_SESSION['caller_dime'])){
	$session_dime = new Session();
	$from_dime = $session_dime->getFrom();
	$sessionID_dime = $session_dime->getId();
	$caller_dime = $from_dime["id"]; 
	$to_dime = $session_dime->getTo();
	$called_dime = $to_dime["id"]; 
	$_SESSION['caller_dime']=$caller_dime;
	$_SESSION['called_dime']=$called_dime;
	$_SESSION['sessionID_dime']=$sessionID_dime;
	}
	
	
	
	// Times signal appears when the param reached the atribute times of the state
	
	if(isset($_SESSION['times_ISCLIENT_dime'])){
	$attempts=intval($_SESSION['times_ISCLIENT_dime']);
	$attempts++;
	$_SESSION['times_ISCLIENT_dime']=$attempts;
			
		
	}else{
		$_SESSION['times_ISCLIENT_dime']=0;
	}
	
	
	// Inicialize the tropo aplication
	
	$tropo = new Tropo();
	
	if(isset($_SESSION['lastState_dime'])){
		@$result_dime=new Result();
	}
	// Update of the value of the global constants and variables, and the session params.
	
	if(isset($_SESSION['month'])){
		$month=$_SESSION['month'];
	} 
	if(isset($_SESSION['day'])){
		$day=$_SESSION['day'];
	} 
	if(isset($_SESSION['hour'])){
		$hour=$_SESSION['hour'];
	} 
	if(isset($_SESSION['people'])){
		$people=$_SESSION['people'];
	} 
	
	// Declaration of the statements of the state.
	
	$tropo->say("Usted desea solicitar reserva en uno de nuestros restaurantes. Es correcto? Pulse 1 si esta conforme o 0 si no lo esta.", array("voice"=>"leonor", "allowSignals"=>array("attemptsLimitISCLIENT")));
	$tropo->ask("",array("choices"=> "[1 DIGIT]", "terminator" => "#", "name"=>"Gather", "voice"=>"leonor", "allowSignals"=>array("attemptsLimitISCLIENT") ));
	$tropo->on(array("event" => "continue", "next" =>"restaurant.php?uri=CLIENTCONF"));
	$tropo->on(array("event" => "incomplete", "next" =>"restaurant.php?uri=HANGUPERROR"));
	$tropo->on(array("event" => "error", "next" =>"restaurant.php?uri=HANGUPERROR"));
	
	// Update the global variables and the session params.
	
	if(isset($month)){
		$_SESSION['month']=$month;
	}
	if(isset($day)){
		$_SESSION['day']=$day;
	}
	if(isset($hour)){
		$_SESSION['hour']=$hour;
	}
	if(isset($people)){
		$_SESSION['people']=$people;
	}
	$_SESSION['lastState_dime']='ISCLIENT';
	return $tropo->RenderJson();
}
// State CLIENTCONF implementation

dispatch_post('/CLIENTCONF', 'app_CLIENTCONF');
function app_CLIENTCONF() {
	
	
	// Creates a Tropo session and getting its parameters
	if(!isset($_SESSION['caller_dime'])){
	$session_dime = new Session();
	$from_dime = $session_dime->getFrom();
	$sessionID_dime = $session_dime->getId();
	$caller_dime = $from_dime["id"]; 
	$to_dime = $session_dime->getTo();
	$called_dime = $to_dime["id"]; 
	$_SESSION['caller_dime']=$caller_dime;
	$_SESSION['called_dime']=$called_dime;
	$_SESSION['sessionID_dime']=$sessionID_dime;
	}
	
	
	
	// Times signal appears when the param reached the atribute times of the state
	
	if(isset($_SESSION['times_CLIENTCONF_dime'])){
	$attempts=intval($_SESSION['times_CLIENTCONF_dime']);
	$attempts++;
	$_SESSION['times_CLIENTCONF_dime']=$attempts;
	if($attempts==3){
		$_SESSION['times_CLIENTCONF_dime']=0;
		$urltimes = "http://shannon.gsi.dit.upm.es/roberto/res/signals.php?signal_dime=attemptsLimitCLIENTCONF&sessionID_dime=".$_SESSION['sessionID_dime'];
		$curl_handle=curl_init();
		curl_setopt($curl_handle,CURLOPT_URL,$urltimes);
		curl_setopt($curl_handle,CURLOPT_CONNECTTIMEOUT,2);
		curl_setopt($curl_handle, CURLOPT_RETURNTRANSFER, TRUE);
		curl_exec($curl_handle);
		curl_close($curl_handle);
	}
			
		
	}else{
		$_SESSION['times_CLIENTCONF_dime']=0;
	}
	
	
	// Inicialize the tropo aplication
	
	$tropo = new Tropo();
	
	if(isset($_SESSION['lastState_dime'])){
		@$result_dime=new Result();
	}
	// Update of the value of the global constants and variables, and the session params.
	
	if(isset($_SESSION['month'])){
		$month=$_SESSION['month'];
	} 
	if(isset($_SESSION['day'])){
		$day=$_SESSION['day'];
	} 
	if(isset($_SESSION['hour'])){
		$hour=$_SESSION['hour'];
	} 
	if(isset($_SESSION['people'])){
		$people=$_SESSION['people'];
	} 
	
	// Declaration of the statements of the state.
	
	if((intval($result_dime->getValue())==1)){
			$tropo->say("De acuerdo. Ahora procederemos a la realizacion de la solicitud. ", array("voice"=>"leonor", "allowSignals"=>array("attemptsLimitCLIENTCONF")));
	$tropo->on(array("event" => "continue", "next" =>"restaurant.php?uri=ASKPEOPLE"));
			}
	else if((intval($result_dime->getValue())==0)){
			$tropo->say("De acuerdo, disculpe las molestias que le hayamos ocasionado. Un saludo.", array("voice"=>"leonor", "allowSignals"=>array("attemptsLimitCLIENTCONF")));
	$tropo->hangup();
			}
	else {
			$tropo->on(array("event" => "continue", "next" =>"restaurant.php?uri=ISCLIENT"));
			}
	$tropo->on(array("event" => "attemptsLimit", "next" =>"restaurant.php?uri=TOOATTEMPTS"));
	$tropo->on(array("event" => "incomplete", "next" =>"restaurant.php?uri=HANGUPERROR"));
	$tropo->on(array("event" => "error", "next" =>"restaurant.php?uri=HANGUPERROR"));
	
	// Update the global variables and the session params.
	
	if(isset($month)){
		$_SESSION['month']=$month;
	}
	if(isset($day)){
		$_SESSION['day']=$day;
	}
	if(isset($hour)){
		$_SESSION['hour']=$hour;
	}
	if(isset($people)){
		$_SESSION['people']=$people;
	}
	$_SESSION['lastState_dime']='CLIENTCONF';
	return $tropo->RenderJson();
}
// State ASKPEOPLE implementation

dispatch_post('/ASKPEOPLE', 'app_ASKPEOPLE');
function app_ASKPEOPLE() {
	
	
	// Creates a Tropo session and getting its parameters
	if(!isset($_SESSION['caller_dime'])){
	$session_dime = new Session();
	$from_dime = $session_dime->getFrom();
	$sessionID_dime = $session_dime->getId();
	$caller_dime = $from_dime["id"]; 
	$to_dime = $session_dime->getTo();
	$called_dime = $to_dime["id"]; 
	$_SESSION['caller_dime']=$caller_dime;
	$_SESSION['called_dime']=$called_dime;
	$_SESSION['sessionID_dime']=$sessionID_dime;
	}
	
	
	
	// Times signal appears when the param reached the atribute times of the state
	
	if(isset($_SESSION['times_ASKPEOPLE_dime'])){
	$attempts=intval($_SESSION['times_ASKPEOPLE_dime']);
	$attempts++;
	$_SESSION['times_ASKPEOPLE_dime']=$attempts;
			
		
	}else{
		$_SESSION['times_ASKPEOPLE_dime']=0;
	}
	
	
	// Inicialize the tropo aplication
	
	$tropo = new Tropo();
	
	if(isset($_SESSION['lastState_dime'])){
		@$result_dime=new Result();
	}
	// Update of the value of the global constants and variables, and the session params.
	
	if(isset($_SESSION['month'])){
		$month=$_SESSION['month'];
	} 
	if(isset($_SESSION['day'])){
		$day=$_SESSION['day'];
	} 
	if(isset($_SESSION['hour'])){
		$hour=$_SESSION['hour'];
	} 
	if(isset($_SESSION['people'])){
		$people=$_SESSION['people'];
	} 
	
	// Declaration of the statements of the state.
	
	$tropo->say("Diga el numero de comensales", array("voice"=>"leonor", "allowSignals"=>array("attemptsLimitASKPEOPLE")));
	$tropo->ask("",array("choices"=> "[1 DIGIT]", "terminator" => "#", "name"=>"Gather", "voice"=>"leonor", "allowSignals"=>array("attemptsLimitASKPEOPLE") ));
	if((intval($_SESSION['times_ASKPEOPLE_dime'])==0)){
			$tropo->on(array("event" => "continue", "next" =>"restaurant.php?uri=ASKDAY"));
			}
	else {
			$tropo->on(array("event" => "continue", "next" =>"restaurant.php?uri=ASKDONE"));
			}
	$tropo->on(array("event" => "incomplete", "next" =>"restaurant.php?uri=HANGUPERROR"));
	$tropo->on(array("event" => "error", "next" =>"restaurant.php?uri=HANGUPERROR"));
	
	// Update the global variables and the session params.
	
	if(isset($month)){
		$_SESSION['month']=$month;
	}
	if(isset($day)){
		$_SESSION['day']=$day;
	}
	if(isset($hour)){
		$_SESSION['hour']=$hour;
	}
	if(isset($people)){
		$_SESSION['people']=$people;
	}
	$_SESSION['lastState_dime']='ASKPEOPLE';
	return $tropo->RenderJson();
}
// State ASKDAY implementation

dispatch_post('/ASKDAY', 'app_ASKDAY');
function app_ASKDAY() {
	
	
	// Creates a Tropo session and getting its parameters
	if(!isset($_SESSION['caller_dime'])){
	$session_dime = new Session();
	$from_dime = $session_dime->getFrom();
	$sessionID_dime = $session_dime->getId();
	$caller_dime = $from_dime["id"]; 
	$to_dime = $session_dime->getTo();
	$called_dime = $to_dime["id"]; 
	$_SESSION['caller_dime']=$caller_dime;
	$_SESSION['called_dime']=$called_dime;
	$_SESSION['sessionID_dime']=$sessionID_dime;
	}
	
	
	
	// Times signal appears when the param reached the atribute times of the state
	
	if(isset($_SESSION['times_ASKDAY_dime'])){
	$attempts=intval($_SESSION['times_ASKDAY_dime']);
	$attempts++;
	$_SESSION['times_ASKDAY_dime']=$attempts;
			
		
	}else{
		$_SESSION['times_ASKDAY_dime']=0;
	}
	
	
	// Inicialize the tropo aplication
	
	$tropo = new Tropo();
	
	if(isset($_SESSION['lastState_dime'])){
		@$result_dime=new Result();
	}
	// Update of the value of the global constants and variables, and the session params.
	
	if(isset($_SESSION['month'])){
		$month=$_SESSION['month'];
	} 
	if(isset($_SESSION['day'])){
		$day=$_SESSION['day'];
	} 
	if(isset($_SESSION['hour'])){
		$hour=$_SESSION['hour'];
	} 
	if(isset($_SESSION['people'])){
		$people=$_SESSION['people'];
	} 
	
	// Declaration of the statements of the state.
	
	$people=intval($result_dime->getValue());
	$tropo->say("En que dia lo desea?", array("voice"=>"leonor", "allowSignals"=>array("attemptsLimitASKDAY")));
	$tropo->ask("",array("choices"=> "[2 DIGITS]", "terminator" => "#", "name"=>"Gather", "voice"=>"leonor", "allowSignals"=>array("attemptsLimitASKDAY") ));
	if((intval($_SESSION['times_ASKDAY_dime'])==0)){
			$tropo->on(array("event" => "continue", "next" =>"restaurant.php?uri=ASKMONTH"));
			}
	else {
			$tropo->on(array("event" => "continue", "next" =>"restaurant.php?uri=ASKDONE"));
			}
	$tropo->on(array("event" => "incomplete", "next" =>"restaurant.php?uri=HANGUPERROR"));
	$tropo->on(array("event" => "error", "next" =>"restaurant.php?uri=HANGUPERROR"));
	
	// Update the global variables and the session params.
	
	if(isset($month)){
		$_SESSION['month']=$month;
	}
	if(isset($day)){
		$_SESSION['day']=$day;
	}
	if(isset($hour)){
		$_SESSION['hour']=$hour;
	}
	if(isset($people)){
		$_SESSION['people']=$people;
	}
	$_SESSION['lastState_dime']='ASKDAY';
	return $tropo->RenderJson();
}
// State ASKMONTH implementation

dispatch_post('/ASKMONTH', 'app_ASKMONTH');
function app_ASKMONTH() {
	
	
	// Creates a Tropo session and getting its parameters
	if(!isset($_SESSION['caller_dime'])){
	$session_dime = new Session();
	$from_dime = $session_dime->getFrom();
	$sessionID_dime = $session_dime->getId();
	$caller_dime = $from_dime["id"]; 
	$to_dime = $session_dime->getTo();
	$called_dime = $to_dime["id"]; 
	$_SESSION['caller_dime']=$caller_dime;
	$_SESSION['called_dime']=$called_dime;
	$_SESSION['sessionID_dime']=$sessionID_dime;
	}
	
	
	
	// Times signal appears when the param reached the atribute times of the state
	
	if(isset($_SESSION['times_ASKMONTH_dime'])){
	$attempts=intval($_SESSION['times_ASKMONTH_dime']);
	$attempts++;
	$_SESSION['times_ASKMONTH_dime']=$attempts;
			
		
	}else{
		$_SESSION['times_ASKMONTH_dime']=0;
	}
	
	
	// Inicialize the tropo aplication
	
	$tropo = new Tropo();
	
	if(isset($_SESSION['lastState_dime'])){
		@$result_dime=new Result();
	}
	// Update of the value of the global constants and variables, and the session params.
	
	if(isset($_SESSION['month'])){
		$month=$_SESSION['month'];
	} 
	if(isset($_SESSION['day'])){
		$day=$_SESSION['day'];
	} 
	if(isset($_SESSION['hour'])){
		$hour=$_SESSION['hour'];
	} 
	if(isset($_SESSION['people'])){
		$people=$_SESSION['people'];
	} 
	
	// Declaration of the statements of the state.
	
	$day=intval($result_dime->getValue());
	$tropo->say("En que mes desea realizar dicha reserva?", array("voice"=>"leonor", "allowSignals"=>array("attemptsLimitASKMONTH")));
	$tropo->ask("",array("choices"=> "[1 DIGIT]", "terminator" => "#", "name"=>"Gather", "voice"=>"leonor", "allowSignals"=>array("attemptsLimitASKMONTH") ));
	if((intval($_SESSION['times_ASKMONTH_dime'])==0)){
			$tropo->on(array("event" => "continue", "next" =>"restaurant.php?uri=ASKHOUR"));
			}
	else {
			$tropo->on(array("event" => "continue", "next" =>"restaurant.php?uri=ASKDONE"));
			}
	$tropo->on(array("event" => "incomplete", "next" =>"restaurant.php?uri=HANGUPERROR"));
	$tropo->on(array("event" => "error", "next" =>"restaurant.php?uri=HANGUPERROR"));
	
	// Update the global variables and the session params.
	
	if(isset($month)){
		$_SESSION['month']=$month;
	}
	if(isset($day)){
		$_SESSION['day']=$day;
	}
	if(isset($hour)){
		$_SESSION['hour']=$hour;
	}
	if(isset($people)){
		$_SESSION['people']=$people;
	}
	$_SESSION['lastState_dime']='ASKMONTH';
	return $tropo->RenderJson();
}
// State ASKHOUR implementation

dispatch_post('/ASKHOUR', 'app_ASKHOUR');
function app_ASKHOUR() {
	
	
	// Creates a Tropo session and getting its parameters
	if(!isset($_SESSION['caller_dime'])){
	$session_dime = new Session();
	$from_dime = $session_dime->getFrom();
	$sessionID_dime = $session_dime->getId();
	$caller_dime = $from_dime["id"]; 
	$to_dime = $session_dime->getTo();
	$called_dime = $to_dime["id"]; 
	$_SESSION['caller_dime']=$caller_dime;
	$_SESSION['called_dime']=$called_dime;
	$_SESSION['sessionID_dime']=$sessionID_dime;
	}
	
	
	
	// Times signal appears when the param reached the atribute times of the state
	
	if(isset($_SESSION['times_ASKHOUR_dime'])){
	$attempts=intval($_SESSION['times_ASKHOUR_dime']);
	$attempts++;
	$_SESSION['times_ASKHOUR_dime']=$attempts;
			
		
	}else{
		$_SESSION['times_ASKHOUR_dime']=0;
	}
	
	
	// Inicialize the tropo aplication
	
	$tropo = new Tropo();
	
	if(isset($_SESSION['lastState_dime'])){
		@$result_dime=new Result();
	}
	// Update of the value of the global constants and variables, and the session params.
	
	if(isset($_SESSION['month'])){
		$month=$_SESSION['month'];
	} 
	if(isset($_SESSION['day'])){
		$day=$_SESSION['day'];
	} 
	if(isset($_SESSION['hour'])){
		$hour=$_SESSION['hour'];
	} 
	if(isset($_SESSION['people'])){
		$people=$_SESSION['people'];
	} 
	
	// Declaration of the statements of the state.
	
	$month=intval($result_dime->getValue());
	$tropo->say("A que hora le conviene?", array("voice"=>"leonor", "allowSignals"=>array("attemptsLimitASKHOUR")));
	$tropo->ask("",array("choices"=> "[2 DIGITS]", "terminator" => "#", "name"=>"Gather", "voice"=>"leonor", "allowSignals"=>array("attemptsLimitASKHOUR") ));
	$tropo->on(array("event" => "continue", "next" =>"restaurant.php?uri=ASKDONE"));
	$tropo->on(array("event" => "incomplete", "next" =>"restaurant.php?uri=HANGUPERROR"));
	$tropo->on(array("event" => "error", "next" =>"restaurant.php?uri=HANGUPERROR"));
	
	// Update the global variables and the session params.
	
	if(isset($month)){
		$_SESSION['month']=$month;
	}
	if(isset($day)){
		$_SESSION['day']=$day;
	}
	if(isset($hour)){
		$_SESSION['hour']=$hour;
	}
	if(isset($people)){
		$_SESSION['people']=$people;
	}
	$_SESSION['lastState_dime']='ASKHOUR';
	return $tropo->RenderJson();
}
// State ASKDONE implementation

dispatch_post('/ASKDONE', 'app_ASKDONE');
function app_ASKDONE() {
	
	
	// Creates a Tropo session and getting its parameters
	if(!isset($_SESSION['caller_dime'])){
	$session_dime = new Session();
	$from_dime = $session_dime->getFrom();
	$sessionID_dime = $session_dime->getId();
	$caller_dime = $from_dime["id"]; 
	$to_dime = $session_dime->getTo();
	$called_dime = $to_dime["id"]; 
	$_SESSION['caller_dime']=$caller_dime;
	$_SESSION['called_dime']=$called_dime;
	$_SESSION['sessionID_dime']=$sessionID_dime;
	}
	
	
	
	// Times signal appears when the param reached the atribute times of the state
	
	if(isset($_SESSION['times_ASKDONE_dime'])){
	$attempts=intval($_SESSION['times_ASKDONE_dime']);
	$attempts++;
	$_SESSION['times_ASKDONE_dime']=$attempts;
			
		
	}else{
		$_SESSION['times_ASKDONE_dime']=0;
	}
	
	
	// Inicialize the tropo aplication
	
	$tropo = new Tropo();
	
	if(isset($_SESSION['lastState_dime'])){
		@$result_dime=new Result();
	}
	// Update of the value of the global constants and variables, and the session params.
	
	if(isset($_SESSION['month'])){
		$month=$_SESSION['month'];
	} 
	if(isset($_SESSION['day'])){
		$day=$_SESSION['day'];
	} 
	if(isset($_SESSION['hour'])){
		$hour=$_SESSION['hour'];
	} 
	if(isset($_SESSION['people'])){
		$people=$_SESSION['people'];
	} 
	
	// Declaration of the statements of the state.
	
	if(($_SESSION['lastState_dime']=="ASKHOUR")){
			$hour=intval($result_dime->getValue());
			}
	else if(($_SESSION['lastState_dime']=="ASKDAY")){
			$day=intval($result_dime->getValue());
			}
	else if(($_SESSION['lastState_dime']=="ASKPEOPLE")){
			$people=intval($result_dime->getValue());
			}
	else if(($_SESSION['lastState_dime']=="ASKMONTH")){
			$month=intval($result_dime->getValue());
			}
	$tropo->say("Usted ha solicitado una reserva en nuestro restaurante el dia ".$day." de ".$month." de "."2012"." a las ".$hour." horas  para ".$people." personas.", array("voice"=>"leonor", "allowSignals"=>array("attemptsLimitASKDONE")));
	$tropo->say("Esta totalmente de acuerdo con dicha solicitud? Pulse 1 si esta conforme, o 0 si no lo esta.", array("voice"=>"leonor", "allowSignals"=>array("attemptsLimitASKDONE")));
	$tropo->ask("",array("choices"=> "[1 DIGIT]", "terminator" => "#", "name"=>"Gather", "voice"=>"leonor", "allowSignals"=>array("attemptsLimitASKDONE") ));
	$tropo->on(array("event" => "continue", "next" =>"restaurant.php?uri=DONECONF"));
	
	// Update the global variables and the session params.
	
	if(isset($month)){
		$_SESSION['month']=$month;
	}
	if(isset($day)){
		$_SESSION['day']=$day;
	}
	if(isset($hour)){
		$_SESSION['hour']=$hour;
	}
	if(isset($people)){
		$_SESSION['people']=$people;
	}
	$_SESSION['lastState_dime']='ASKDONE';
	return $tropo->RenderJson();
}
// State DONECONF implementation

dispatch_post('/DONECONF', 'app_DONECONF');
function app_DONECONF() {
	
	
	// Creates a Tropo session and getting its parameters
	if(!isset($_SESSION['caller_dime'])){
	$session_dime = new Session();
	$from_dime = $session_dime->getFrom();
	$sessionID_dime = $session_dime->getId();
	$caller_dime = $from_dime["id"]; 
	$to_dime = $session_dime->getTo();
	$called_dime = $to_dime["id"]; 
	$_SESSION['caller_dime']=$caller_dime;
	$_SESSION['called_dime']=$called_dime;
	$_SESSION['sessionID_dime']=$sessionID_dime;
	}
	
	
	
	// Times signal appears when the param reached the atribute times of the state
	
	if(isset($_SESSION['times_DONECONF_dime'])){
	$attempts=intval($_SESSION['times_DONECONF_dime']);
	$attempts++;
	$_SESSION['times_DONECONF_dime']=$attempts;
	if($attempts==3){
		$_SESSION['times_DONECONF_dime']=0;
		$urltimes = "http://shannon.gsi.dit.upm.es/roberto/res/signals.php?signal_dime=attemptsLimitDONECONF&sessionID_dime=".$_SESSION['sessionID_dime'];
		$curl_handle=curl_init();
		curl_setopt($curl_handle,CURLOPT_URL,$urltimes);
		curl_setopt($curl_handle,CURLOPT_CONNECTTIMEOUT,2);
		curl_setopt($curl_handle, CURLOPT_RETURNTRANSFER, TRUE);
		curl_exec($curl_handle);
		curl_close($curl_handle);
	}
			
		
	}else{
		$_SESSION['times_DONECONF_dime']=0;
	}
	
	
	// Inicialize the tropo aplication
	
	$tropo = new Tropo();
	
	if(isset($_SESSION['lastState_dime'])){
		@$result_dime=new Result();
	}
	// Update of the value of the global constants and variables, and the session params.
	
	if(isset($_SESSION['month'])){
		$month=$_SESSION['month'];
	} 
	if(isset($_SESSION['day'])){
		$day=$_SESSION['day'];
	} 
	if(isset($_SESSION['hour'])){
		$hour=$_SESSION['hour'];
	} 
	if(isset($_SESSION['people'])){
		$people=$_SESSION['people'];
	} 
	
	// Declaration of the statements of the state.
	
	if((intval($result_dime->getValue())==1)){
			$tropo->on(array("event" => "continue", "next" =>"restaurant.php?uri=END"));
			}
	else if((intval($result_dime->getValue())==0)){
			$tropo->say("Que dato desea modificar?", array("voice"=>"leonor", "allowSignals"=>array("attemptsLimitDONECONF")));
	$tropo->say("Pulse 1 para el numero de comensales.", array("voice"=>"leonor", "allowSignals"=>array("attemptsLimitDONECONF")));
	$tropo->say("Pulse 2 para el dia", array("voice"=>"leonor", "allowSignals"=>array("attemptsLimitDONECONF")));
	$tropo->say("Pulse 3 para el mes", array("voice"=>"leonor", "allowSignals"=>array("attemptsLimitDONECONF")));
	$tropo->say("Pulse 4 para la hora", array("voice"=>"leonor", "allowSignals"=>array("attemptsLimitDONECONF")));
	$tropo->ask("",array("choices"=> "[1 DIGIT]", "terminator" => "#", "name"=>"Gather", "voice"=>"leonor", "allowSignals"=>array("attemptsLimitDONECONF") ));
	$tropo->on(array("event" => "continue", "next" =>"restaurant.php?uri=MODIFICATION"));
			}
	$tropo->on(array("event" => "attemptsLimit", "next" =>"restaurant.php?uri=TOOATTEMPTS"));
	$tropo->on(array("event" => "incomplete", "next" =>"restaurant.php?uri=HANGUPERROR"));
	$tropo->on(array("event" => "error", "next" =>"restaurant.php?uri=HANGUPERROR"));
	
	// Update the global variables and the session params.
	
	if(isset($month)){
		$_SESSION['month']=$month;
	}
	if(isset($day)){
		$_SESSION['day']=$day;
	}
	if(isset($hour)){
		$_SESSION['hour']=$hour;
	}
	if(isset($people)){
		$_SESSION['people']=$people;
	}
	$_SESSION['lastState_dime']='DONECONF';
	return $tropo->RenderJson();
}
// State MODIFICATION implementation

dispatch_post('/MODIFICATION', 'app_MODIFICATION');
function app_MODIFICATION() {
	
	
	// Creates a Tropo session and getting its parameters
	if(!isset($_SESSION['caller_dime'])){
	$session_dime = new Session();
	$from_dime = $session_dime->getFrom();
	$sessionID_dime = $session_dime->getId();
	$caller_dime = $from_dime["id"]; 
	$to_dime = $session_dime->getTo();
	$called_dime = $to_dime["id"]; 
	$_SESSION['caller_dime']=$caller_dime;
	$_SESSION['called_dime']=$called_dime;
	$_SESSION['sessionID_dime']=$sessionID_dime;
	}
	
	
	
	// Times signal appears when the param reached the atribute times of the state
	
	if(isset($_SESSION['times_MODIFICATION_dime'])){
	$attempts=intval($_SESSION['times_MODIFICATION_dime']);
	$attempts++;
	$_SESSION['times_MODIFICATION_dime']=$attempts;
	if($attempts==3){
		$_SESSION['times_MODIFICATION_dime']=0;
		$urltimes = "http://shannon.gsi.dit.upm.es/roberto/res/signals.php?signal_dime=attemptsLimitMODIFICATION&sessionID_dime=".$_SESSION['sessionID_dime'];
		$curl_handle=curl_init();
		curl_setopt($curl_handle,CURLOPT_URL,$urltimes);
		curl_setopt($curl_handle,CURLOPT_CONNECTTIMEOUT,2);
		curl_setopt($curl_handle, CURLOPT_RETURNTRANSFER, TRUE);
		curl_exec($curl_handle);
		curl_close($curl_handle);
	}
			
		
	}else{
		$_SESSION['times_MODIFICATION_dime']=0;
	}
	
	
	// Inicialize the tropo aplication
	
	$tropo = new Tropo();
	
	if(isset($_SESSION['lastState_dime'])){
		@$result_dime=new Result();
	}
	// Update of the value of the global constants and variables, and the session params.
	
	if(isset($_SESSION['month'])){
		$month=$_SESSION['month'];
	} 
	if(isset($_SESSION['day'])){
		$day=$_SESSION['day'];
	} 
	if(isset($_SESSION['hour'])){
		$hour=$_SESSION['hour'];
	} 
	if(isset($_SESSION['people'])){
		$people=$_SESSION['people'];
	} 
	
	// Declaration of the statements of the state.
	
	if((intval($result_dime->getValue())==1)){
			$tropo->on(array("event" => "continue", "next" =>"restaurant.php?uri=ASKPEOPLE"));
			}
	else if((intval($result_dime->getValue())==2)){
			$tropo->on(array("event" => "continue", "next" =>"restaurant.php?uri=ASKDAY"));
			}
	else if((intval($result_dime->getValue())==3)){
			$tropo->on(array("event" => "continue", "next" =>"restaurant.php?uri=ASKMONTH"));
			}
	else if((intval($result_dime->getValue())==4)){
			$tropo->on(array("event" => "continue", "next" =>"restaurant.php?uri=ASKHOUR"));
			}
	else {
			$tropo->say("Disculpe, pero ha pulsado un digito equivocado.", array("voice"=>"leonor", "allowSignals"=>array("attemptsLimitMODIFICATION")));
	$tropo->on(array("event" => "continue", "next" =>"restaurant.php?uri=DONECONF"));
			}
	$tropo->on(array("event" => "attemptsLimit", "next" =>"restaurant.php?uri=TOOATTEMPTS"));
	$tropo->on(array("event" => "incomplete", "next" =>"restaurant.php?uri=HANGUPERROR"));
	$tropo->on(array("event" => "error", "next" =>"restaurant.php?uri=HANGUPERROR"));
	
	// Update the global variables and the session params.
	
	if(isset($month)){
		$_SESSION['month']=$month;
	}
	if(isset($day)){
		$_SESSION['day']=$day;
	}
	if(isset($hour)){
		$_SESSION['hour']=$hour;
	}
	if(isset($people)){
		$_SESSION['people']=$people;
	}
	$_SESSION['lastState_dime']='MODIFICATION';
	return $tropo->RenderJson();
}
// State TOOATTEMPTS implementation

dispatch_post('/TOOATTEMPTS', 'app_TOOATTEMPTS');
function app_TOOATTEMPTS() {
	
	
	// Creates a Tropo session and getting its parameters
	if(!isset($_SESSION['caller_dime'])){
	$session_dime = new Session();
	$from_dime = $session_dime->getFrom();
	$sessionID_dime = $session_dime->getId();
	$caller_dime = $from_dime["id"]; 
	$to_dime = $session_dime->getTo();
	$called_dime = $to_dime["id"]; 
	$_SESSION['caller_dime']=$caller_dime;
	$_SESSION['called_dime']=$called_dime;
	$_SESSION['sessionID_dime']=$sessionID_dime;
	}
	
	
	
	// Times signal appears when the param reached the atribute times of the state
	
	if(isset($_SESSION['times_TOOATTEMPTS_dime'])){
	$attempts=intval($_SESSION['times_TOOATTEMPTS_dime']);
	$attempts++;
	$_SESSION['times_TOOATTEMPTS_dime']=$attempts;
			
		
	}else{
		$_SESSION['times_TOOATTEMPTS_dime']=0;
	}
	
	
	// Inicialize the tropo aplication
	
	$tropo = new Tropo();
	
	if(isset($_SESSION['lastState_dime'])){
		@$result_dime=new Result();
	}
	// Update of the value of the global constants and variables, and the session params.
	
	if(isset($_SESSION['month'])){
		$month=$_SESSION['month'];
	} 
	if(isset($_SESSION['day'])){
		$day=$_SESSION['day'];
	} 
	if(isset($_SESSION['hour'])){
		$hour=$_SESSION['hour'];
	} 
	if(isset($_SESSION['people'])){
		$people=$_SESSION['people'];
	} 
	
	// Declaration of the statements of the state.
	
	$tropo->say("Disculpe, pero estamos teniendo problemas para entender. Si es tan amable intentelo mas tarde", array("voice"=>"leonor", "allowSignals"=>array("attemptsLimitTOOATTEMPTS")));
	
	// Update the global variables and the session params.
	
	if(isset($month)){
		$_SESSION['month']=$month;
	}
	if(isset($day)){
		$_SESSION['day']=$day;
	}
	if(isset($hour)){
		$_SESSION['hour']=$hour;
	}
	if(isset($people)){
		$_SESSION['people']=$people;
	}
	$_SESSION['lastState_dime']='TOOATTEMPTS';
	return $tropo->RenderJson();
}
// State HANGUPERROR implementation

dispatch_post('/HANGUPERROR', 'app_HANGUPERROR');
function app_HANGUPERROR() {
	
	
	// Creates a Tropo session and getting its parameters
	if(!isset($_SESSION['caller_dime'])){
	$session_dime = new Session();
	$from_dime = $session_dime->getFrom();
	$sessionID_dime = $session_dime->getId();
	$caller_dime = $from_dime["id"]; 
	$to_dime = $session_dime->getTo();
	$called_dime = $to_dime["id"]; 
	$_SESSION['caller_dime']=$caller_dime;
	$_SESSION['called_dime']=$called_dime;
	$_SESSION['sessionID_dime']=$sessionID_dime;
	}
	
	
	
	// Times signal appears when the param reached the atribute times of the state
	
	if(isset($_SESSION['times_HANGUPERROR_dime'])){
	$attempts=intval($_SESSION['times_HANGUPERROR_dime']);
	$attempts++;
	$_SESSION['times_HANGUPERROR_dime']=$attempts;
			
		
	}else{
		$_SESSION['times_HANGUPERROR_dime']=0;
	}
	
	
	// Inicialize the tropo aplication
	
	$tropo = new Tropo();
	
	if(isset($_SESSION['lastState_dime'])){
		@$result_dime=new Result();
	}
	// Update of the value of the global constants and variables, and the session params.
	
	if(isset($_SESSION['month'])){
		$month=$_SESSION['month'];
	} 
	if(isset($_SESSION['day'])){
		$day=$_SESSION['day'];
	} 
	if(isset($_SESSION['hour'])){
		$hour=$_SESSION['hour'];
	} 
	if(isset($_SESSION['people'])){
		$people=$_SESSION['people'];
	} 
	
	// Declaration of the statements of the state.
	
	$tropo->say("Ha ocurrido un error, disculpe las molestias.", array("voice"=>"leonor", "allowSignals"=>array("attemptsLimitHANGUPERROR")));
	$tropo->hangup();
	
	// Update the global variables and the session params.
	
	if(isset($month)){
		$_SESSION['month']=$month;
	}
	if(isset($day)){
		$_SESSION['day']=$day;
	}
	if(isset($hour)){
		$_SESSION['hour']=$hour;
	}
	if(isset($people)){
		$_SESSION['people']=$people;
	}
	$_SESSION['lastState_dime']='HANGUPERROR';
	return $tropo->RenderJson();
}
// State END implementation

dispatch_post('/END', 'app_END');
function app_END() {
	
	
	// Creates a Tropo session and getting its parameters
	if(!isset($_SESSION['caller_dime'])){
	$session_dime = new Session();
	$from_dime = $session_dime->getFrom();
	$sessionID_dime = $session_dime->getId();
	$caller_dime = $from_dime["id"]; 
	$to_dime = $session_dime->getTo();
	$called_dime = $to_dime["id"]; 
	$_SESSION['caller_dime']=$caller_dime;
	$_SESSION['called_dime']=$called_dime;
	$_SESSION['sessionID_dime']=$sessionID_dime;
	}
	
	
	
	// Times signal appears when the param reached the atribute times of the state
	
	if(isset($_SESSION['times_END_dime'])){
	$attempts=intval($_SESSION['times_END_dime']);
	$attempts++;
	$_SESSION['times_END_dime']=$attempts;
			
		
	}else{
		$_SESSION['times_END_dime']=0;
	}
	
	
	// Inicialize the tropo aplication
	
	$tropo = new Tropo();
	
	if(isset($_SESSION['lastState_dime'])){
		@$result_dime=new Result();
	}
	// Update of the value of the global constants and variables, and the session params.
	
	if(isset($_SESSION['month'])){
		$month=$_SESSION['month'];
	} 
	if(isset($_SESSION['day'])){
		$day=$_SESSION['day'];
	} 
	if(isset($_SESSION['hour'])){
		$hour=$_SESSION['hour'];
	} 
	if(isset($_SESSION['people'])){
		$people=$_SESSION['people'];
	} 
	
	// Declaration of the statements of the state.
	
	$tropo->say("De acuerdo. Gracias por utilizar nuestro servicio de restaurantes Telcodev. Un saludo.", array("voice"=>"leonor", "allowSignals"=>array("attemptsLimitEND")));
	if(($_SESSION['caller_dime']==userNumber)){
			// Email implementation
			
			mail(userEmail, "Reservation","Usted ha solicitado una reserva en nuestro restaurante el dia ".$day."de".$month."de".year."a las ".$hour." para ".$people." personas", "From: <"."restaurant@dime.com"."> \r\n") ;
	// Send implementation for HTTP GET with cURL.
				
						$curl_handle=curl_init();
						curl_setopt($curl_handle,CURLOPT_URL,"http://shannon.gsi.dit.upm.es/roberto/res/saveReservation.php"."?"."caller=".userNumber."&"."day=".$day."&"."hour=".$hour."&"."month=".$month."&"."people=".$people."&"."year=".year);
						curl_setopt($curl_handle,CURLOPT_CONNECTTIMEOUT,2);
						curl_setopt($curl_handle, CURLOPT_RETURNTRANSFER, TRUE);
						curl_exec($curl_handle);
						curl_close($curl_handle);;
			}
	else {
			// Send implementation for HTTP GET with cURL.
				
						$curl_handle=curl_init();
						curl_setopt($curl_handle,CURLOPT_URL,"http://shannon.gsi.dit.upm.es/roberto/res/saveReservation.php"."?"."caller=".$_SESSION['caller_dime']."&"."day=".$day."&"."hour=".$hour."&"."month=".$month."&"."people=".$people."&"."year=".year);
						curl_setopt($curl_handle,CURLOPT_CONNECTTIMEOUT,2);
						curl_setopt($curl_handle, CURLOPT_RETURNTRANSFER, TRUE);
						curl_exec($curl_handle);
						curl_close($curl_handle);;
			}
	$tropo->hangup();
	
	// Update the global variables and the session params.
	
	if(isset($month)){
		$_SESSION['month']=$month;
	}
	if(isset($day)){
		$_SESSION['day']=$day;
	}
	if(isset($hour)){
		$_SESSION['hour']=$hour;
	}
	if(isset($people)){
		$_SESSION['people']=$people;
	}
	$_SESSION['lastState_dime']='END';
	return $tropo->RenderJson();
}

run(); 
?>