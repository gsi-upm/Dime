/*
* generated by Xtext
*/
package org.telcodev.dsl.ui.outline;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.ui.editor.outline.IOutlineNode;
import org.eclipse.xtext.ui.editor.outline.impl.DefaultOutlineTreeProvider;
import org.telcodev.dsl.dime.AbstractElement;
import org.telcodev.dsl.dime.DimePackage;
import org.telcodev.dsl.dime.State;


/**
 * customization of the default outline structure
 * 
 */
public class DimeOutlineTreeProvider extends DefaultOutlineTreeProvider {

	

	@Override
	protected void _createChildren(IOutlineNode parentNode, EObject modelElement) {
		// TODO Auto-generated method stub
		
		if(modelElement.eClass().getName().equals("Say")||modelElement.eClass().getName().equals("NumVariable")||modelElement.eClass().getName().equals("Constant")||modelElement.eClass().getName().equals("BoolVariable")||modelElement.eClass().getName().equals("Ask")||modelElement.eClass().getName().equals("Email")||modelElement.eClass().getName().equals("Play")||modelElement.eClass().getName().equals("Call")||modelElement.eClass().getName().equals("Dial")||modelElement.eClass().getName().equals("Record")||modelElement.eClass().getName().equals("GetDigits")||modelElement.eClass().getName().equals("Sms")||modelElement.eClass().getName().equals("StringVariable")||modelElement.eClass().getName().equals("Transition")){
			return;
		}
		
		
		super._createChildren(parentNode, modelElement);
	}

	
	public void _createChildren(IOutlineNode parent, State m) {
		for (AbstractElement v : m.getStms()) { //IF its only one dont loop ;-)
			if(v.eClass().equals("IfExp")){
				for (AbstractElement d : m.getStms()){
					createNode(parent, d);
				}
					
			}
			createNode(parent, v);
		}
	}
	
}
