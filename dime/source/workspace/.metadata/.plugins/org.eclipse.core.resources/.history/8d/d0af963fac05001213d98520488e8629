/*
* generated by Xtext
*/
package org.telcodev.dsl.ui.labeling;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;
import org.telcodev.dsl.dime.Block;
import org.telcodev.dsl.dime.BoolVariable;
import org.telcodev.dsl.dime.CondBlock;
import org.telcodev.dsl.dime.Constant;
import org.telcodev.dsl.dime.IfExp;
import org.telcodev.dsl.dime.NumVariable;
import org.telcodev.dsl.dime.Send;
import org.telcodev.dsl.dime.StringVariable;

import com.google.inject.Inject;

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#labelProvider
 */
public class DimeLabelProvider extends DefaultEObjectLabelProvider {

	@Inject
	public DimeLabelProvider(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

/*
	//Labels and icons can be computed like this:
	
	String text(MyModel ele) {
	  return "my "+ele.getName();
	}
	 
    String image(MyModel ele) {
      return "MyModel.gif";
    }
*/ 
	
	String text(CondBlock ele) {
        return "if";
      }
	String text(Block ele) {
        return "else";
      }
	
	String text(StringVariable ele) {
        return "var"+ele.getName();
      }
	String text(NumVariable ele) {
        return "var "+ele.getName();
      }
	String text(Constant ele) {
        return "const "+ele.getName();
      }
	String text(BoolVariable ele) {
        return "var "+ele.getName();
      }
	String text(Send ele) {
        return "Send to "+ele.getUrl().toString();
      }
	 
	
}
