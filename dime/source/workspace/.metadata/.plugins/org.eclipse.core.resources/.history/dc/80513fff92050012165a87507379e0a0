/*
* generated by Xtext
*/
package org.telcodev.dsl.ui.outline;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.ui.editor.outline.IOutlineNode;
import org.eclipse.xtext.ui.editor.outline.impl.DefaultOutlineTreeProvider;
import org.telcodev.dsl.dime.AbstractElement;
import org.telcodev.dsl.dime.CondBlock;
import org.telcodev.dsl.dime.IfExp;

import org.telcodev.dsl.dime.State;


/**
 * customization of the default outline structure
 * 
 */
public class DimeOutlineTreeProvider extends DefaultOutlineTreeProvider {

	
 
	

	@Override
	protected void _createChildren(IOutlineNode parentNode, EObject modelElement) {
		// TODO Auto-generated method stub
		System.out.println(modelElement.eClass().getName());
		if(modelElement.eClass().getName().equals("CondBlock")){
			condBlock_createChildren(parentNode, (CondBlock) modelElement);
		}
		if(modelElement.eClass().getName().equals("State")){
			 state_createChildren(parentNode, (State) modelElement);
		}else{
	
			super._createChildren(parentNode, modelElement);
		} 
		
	} 

	public void state_createChildren(IOutlineNode parent, State m) {
		for (AbstractElement v : m.getStms()) { //IF its only one dont loop ;-)
		
			if(v.eClass().getName().equals("IfExp")){
				System.out.println(v.eClass().getName());
				
				IfExp p= (IfExp) v;
				createNode(parent, p.getBlock());
				for (CondBlock d :p.getBlocks()){
					createNode(parent, d);
					
				}
				if( p.getDefaultBlock()!=null)
				createNode(parent, p.getDefaultBlock());
			}else{
				createNode(parent, v);
			}
			
		}
	}
	
	public void condBlock_createChildren(IOutlineNode parent, CondBlock m) {
		for(AbstractElement e: m.getAction().getSta()){
			createNode(parent,e);
		}
	
	}
}
