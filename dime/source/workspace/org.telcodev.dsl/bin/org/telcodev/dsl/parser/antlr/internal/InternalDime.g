/*
* generated by Xtext
*/
grammar InternalDime;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.telcodev.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.telcodev.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.telcodev.dsl.services.DimeGrammarAccess;

}

@parser::members {

 	private DimeGrammarAccess grammarAccess;
 	
    public InternalDimeParser(TokenStream input, DimeGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Document";	
   	}
   	
   	@Override
   	protected DimeGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleDocument
entryRuleDocument returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDocumentRule()); }
	 iv_ruleDocument=ruleDocument 
	 { $current=$iv_ruleDocument.current; } 
	 EOF 
;

// Rule Document
ruleDocument returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Application' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDocumentAccess().getApplicationKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDocumentAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDocumentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDocumentAccess().getElementsStatementParserRuleCall_2_0()); 
	    }
		lv_elements_2_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDocumentRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_2_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getDocumentAccess().getStaStateParserRuleCall_3_0()); 
	    }
		lv_sta_3_0=ruleState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDocumentRule());
	        }
       		add(
       			$current, 
       			"sta",
        		lv_sta_3_0, 
        		"State");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	 iv_ruleStatement=ruleStatement 
	 { $current=$iv_ruleStatement.current; } 
	 EOF 
;

// Rule Statement
ruleStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getNumVariableParserRuleCall_0()); 
    }
    this_NumVariable_0=ruleNumVariable
    { 
        $current = $this_NumVariable_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getStringVariableParserRuleCall_1()); 
    }
    this_StringVariable_1=ruleStringVariable
    { 
        $current = $this_StringVariable_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getBoolVariableParserRuleCall_2()); 
    }
    this_BoolVariable_2=ruleBoolVariable
    { 
        $current = $this_BoolVariable_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getConstantParserRuleCall_3()); 
    }
    this_Constant_3=ruleConstant
    { 
        $current = $this_Constant_3.current; 
        afterParserOrEnumRuleCall();
    }

    |(
(
		lv_com_4_0=RULE_ML_COMMENT
		{
			newLeafNode(lv_com_4_0, grammarAccess.getStatementAccess().getComML_COMMENTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"com",
        		lv_com_4_0, 
        		"ML_COMMENT");
	    }

)
))
;





// Entry rule entryRuleAbstractElement
entryRuleAbstractElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractElementRule()); }
	 iv_ruleAbstractElement=ruleAbstractElement 
	 { $current=$iv_ruleAbstractElement.current; } 
	 EOF 
;

// Rule AbstractElement
ruleAbstractElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractElementAccess().getStatementParserRuleCall_0()); 
    }
    this_Statement_0=ruleStatement
    { 
        $current = $this_Statement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractElementAccess().getTransitionParserRuleCall_1()); 
    }
    this_Transition_1=ruleTransition
    { 
        $current = $this_Transition_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractElementAccess().getIfExpParserRuleCall_2()); 
    }
    this_IfExp_2=ruleIfExp
    { 
        $current = $this_IfExp_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractElementAccess().getVoiceTagParserRuleCall_3()); 
    }
    this_VoiceTag_3=ruleVoiceTag
    { 
        $current = $this_VoiceTag_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleState
entryRuleState returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	 iv_ruleState=ruleState 
	 { $current=$iv_ruleState.current; } 
	 EOF 
;

// Rule State
ruleState returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getStateAccess().getUnorderedGroup());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStateAccess().getUnorderedGroup(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStateAccess().getUnorderedGroup(), 0);
	 				}
					({true}?=>(	otherlv_1='State' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStateAccess().getStateKeyword_0_0());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getStateAccess().getNameIDTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(	otherlv_3='times' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStateAccess().getTimesKeyword_0_2_0());
    }
(
(
		lv_times_4_0=RULE_INT
		{
			newLeafNode(lv_times_4_0, grammarAccess.getStateAccess().getTimesINTTerminalRuleCall_0_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"times",
        		lv_times_4_0, 
        		"INT");
	    }

)
))?))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStateAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStateAccess().getUnorderedGroup(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStateAccess().getUnorderedGroup(), 1);
	 				}
					({true}?=>((	otherlv_5='timeout' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStateAccess().getTimeoutKeyword_1_0_0());
    }
(
(
		lv_timeout_6_0=RULE_INT
		{
			newLeafNode(lv_timeout_6_0, grammarAccess.getStateAccess().getTimeoutINTTerminalRuleCall_1_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"timeout",
        		lv_timeout_6_0, 
        		"INT");
	    }

)
))?	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateAccess().getStmsAbstractElementParserRuleCall_1_2_0()); 
	    }
		lv_stms_8_0=ruleAbstractElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateRule());
	        }
       		add(
       			$current, 
       			"stms",
        		lv_stms_8_0, 
        		"AbstractElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getStateAccess().getRightCurlyBracketKeyword_1_3());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStateAccess().getUnorderedGroup());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getStateAccess().getUnorderedGroup())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getStateAccess().getUnorderedGroup());
	}

)
;





// Entry rule entryRuleVoiceTag
entryRuleVoiceTag returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVoiceTagRule()); }
	 iv_ruleVoiceTag=ruleVoiceTag 
	 { $current=$iv_ruleVoiceTag.current; } 
	 EOF 
;

// Rule VoiceTag
ruleVoiceTag returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getVoiceTagAccess().getSayParserRuleCall_0()); 
    }
    this_Say_0=ruleSay
    { 
        $current = $this_Say_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVoiceTagAccess().getDialParserRuleCall_1()); 
    }
    this_Dial_1=ruleDial
    { 
        $current = $this_Dial_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVoiceTagAccess().getPlayParserRuleCall_2()); 
    }
    this_Play_2=rulePlay
    { 
        $current = $this_Play_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVoiceTagAccess().getRecordParserRuleCall_3()); 
    }
    this_Record_3=ruleRecord
    { 
        $current = $this_Record_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVoiceTagAccess().getGetDigitsParserRuleCall_4()); 
    }
    this_GetDigits_4=ruleGetDigits
    { 
        $current = $this_GetDigits_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVoiceTagAccess().getAskParserRuleCall_5()); 
    }
    this_Ask_5=ruleAsk
    { 
        $current = $this_Ask_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVoiceTagAccess().getSendParserRuleCall_6()); 
    }
    this_Send_6=ruleSend
    { 
        $current = $this_Send_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVoiceTagAccess().getRejectParserRuleCall_7()); 
    }
    this_Reject_7=ruleReject
    { 
        $current = $this_Reject_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVoiceTagAccess().getHangupParserRuleCall_8()); 
    }
    this_Hangup_8=ruleHangup
    { 
        $current = $this_Hangup_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVoiceTagAccess().getCallParserRuleCall_9()); 
    }
    this_Call_9=ruleCall
    { 
        $current = $this_Call_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVoiceTagAccess().getSmsParserRuleCall_10()); 
    }
    this_Sms_10=ruleSms
    { 
        $current = $this_Sms_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVoiceTagAccess().getEmailParserRuleCall_11()); 
    }
    this_Email_11=ruleEmail
    { 
        $current = $this_Email_11.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCall
entryRuleCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCallRule()); }
	 iv_ruleCall=ruleCall 
	 { $current=$iv_ruleCall.current; } 
	 EOF 
;

// Rule Call
ruleCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'Call' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getCallAccess().getNameCallKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCallRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "Call");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCallAccess().getToConcatenationExpressionParserRuleCall_1_0()); 
	    }
		lv_to_1_0=ruleConcatenationExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCallRule());
	        }
       		set(
       			$current, 
       			"to",
        		lv_to_1_0, 
        		"ConcatenationExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCallAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleDial
entryRuleDial returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDialRule()); }
	 iv_ruleDial=ruleDial 
	 { $current=$iv_ruleDial.current; } 
	 EOF 
;

// Rule Dial
ruleDial returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'DialTo' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getDialAccess().getNameDialToKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDialRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "DialTo");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDialAccess().getToConcatenationExpressionParserRuleCall_1_0()); 
	    }
		lv_to_1_0=ruleConcatenationExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDialRule());
	        }
       		set(
       			$current, 
       			"to",
        		lv_to_1_0, 
        		"ConcatenationExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDialAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRulePlay
entryRulePlay returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPlayRule()); }
	 iv_rulePlay=rulePlay 
	 { $current=$iv_rulePlay.current; } 
	 EOF 
;

// Rule Play
rulePlay returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'Play' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getPlayAccess().getNamePlayKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPlayRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "Play");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPlayAccess().getFileConcatenationExpressionParserRuleCall_1_0()); 
	    }
		lv_file_1_0=ruleConcatenationExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPlayRule());
	        }
       		set(
       			$current, 
       			"file",
        		lv_file_1_0, 
        		"ConcatenationExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPlayAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleRecord
entryRuleRecord returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRecordRule()); }
	 iv_ruleRecord=ruleRecord 
	 { $current=$iv_ruleRecord.current; } 
	 EOF 
;

// Rule Record
ruleRecord returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'Record' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getRecordAccess().getNameRecordKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRecordRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "Record");
	    }

)
)(
(
		lv_time_1_0=RULE_INT
		{
			newLeafNode(lv_time_1_0, grammarAccess.getRecordAccess().getTimeINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRecordRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"time",
        		lv_time_1_0, 
        		"INT");
	    }

)
)	otherlv_2='seconds' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRecordAccess().getSecondsKeyword_2());
    }
	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRecordAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleReject
entryRuleReject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRejectRule()); }
	 iv_ruleReject=ruleReject 
	 { $current=$iv_ruleReject.current; } 
	 EOF 
;

// Rule Reject
ruleReject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=	'Reject;' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getRejectAccess().getNameRejectKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRejectRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "Reject;");
	    }

)
)
;





// Entry rule entryRuleHangup
entryRuleHangup returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHangupRule()); }
	 iv_ruleHangup=ruleHangup 
	 { $current=$iv_ruleHangup.current; } 
	 EOF 
;

// Rule Hangup
ruleHangup returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=	'HangUp;' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getHangupAccess().getNameHangUpKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHangupRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "HangUp;");
	    }

)
)
;





// Entry rule entryRuleGetDigits
entryRuleGetDigits returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGetDigitsRule()); }
	 iv_ruleGetDigits=ruleGetDigits 
	 { $current=$iv_ruleGetDigits.current; } 
	 EOF 
;

// Rule GetDigits
ruleGetDigits returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'Get' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getGetDigitsAccess().getNameGetKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGetDigitsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "Get");
	    }

)
)(
(
		lv_numDigits_1_0=RULE_INT
		{
			newLeafNode(lv_numDigits_1_0, grammarAccess.getGetDigitsAccess().getNumDigitsINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGetDigitsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"numDigits",
        		lv_numDigits_1_0, 
        		"INT");
	    }

)
)	otherlv_2='digits' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGetDigitsAccess().getDigitsKeyword_2());
    }
	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getGetDigitsAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleAsk
entryRuleAsk returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAskRule()); }
	 iv_ruleAsk=ruleAsk 
	 { $current=$iv_ruleAsk.current; } 
	 EOF 
;

// Rule Ask
ruleAsk returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'Ask' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getAskAccess().getNameAskKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAskRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "Ask");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAskAccess().getQuestionConcatenationExpressionParserRuleCall_1_0()); 
	    }
		lv_question_1_0=ruleConcatenationExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAskRule());
	        }
       		set(
       			$current, 
       			"question",
        		lv_question_1_0, 
        		"ConcatenationExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAskAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleSend
entryRuleSend returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSendRule()); }
	 iv_ruleSend=ruleSend 
	 { $current=$iv_ruleSend.current; } 
	 EOF 
;

// Rule Send
ruleSend returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'Send' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getSendAccess().getNameSendKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSendRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "Send");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSendAccess().getParamsSendBlockParserRuleCall_1_0()); 
	    }
		lv_params_1_0=ruleSendBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSendRule());
	        }
       		set(
       			$current, 
       			"params",
        		lv_params_1_0, 
        		"SendBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='to' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSendAccess().getToKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSendAccess().getUrlConcatenationExpressionParserRuleCall_3_0()); 
	    }
		lv_url_3_0=ruleConcatenationExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSendRule());
	        }
       		set(
       			$current, 
       			"url",
        		lv_url_3_0, 
        		"ConcatenationExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSendAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleSendBlock
entryRuleSendBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSendBlockRule()); }
	 iv_ruleSendBlock=ruleSendBlock 
	 { $current=$iv_ruleSendBlock.current; } 
	 EOF 
;

// Rule SendBlock
ruleSendBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSendBlockAccess().getSendBlockAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSendBlockAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSendBlockAccess().getValueParamParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSendBlockRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Param");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSendBlockAccess().getStmsNotPrimaryParamParserRuleCall_3_0()); 
	    }
		lv_stms_3_0=ruleNotPrimaryParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSendBlockRule());
	        }
       		add(
       			$current, 
       			"stms",
        		lv_stms_3_0, 
        		"NotPrimaryParam");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSendBlockAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleNotPrimaryParam
entryRuleNotPrimaryParam returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNotPrimaryParamRule()); }
	 iv_ruleNotPrimaryParam=ruleNotPrimaryParam 
	 { $current=$iv_ruleNotPrimaryParam.current; } 
	 EOF 
;

// Rule NotPrimaryParam
ruleNotPrimaryParam returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0=',' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNotPrimaryParamAccess().getCommaKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNotPrimaryParamAccess().getValueParamParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNotPrimaryParamRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"Param");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleParam
entryRuleParam returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParamRule()); }
	 iv_ruleParam=ruleParam 
	 { $current=$iv_ruleParam.current; } 
	 EOF 
;

// Rule Param
ruleParam returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_STRING
		{
			newLeafNode(lv_name_0_0, grammarAccess.getParamAccess().getNameSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParamRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"STRING");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getParamAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParamAccess().getValueConcatenationExpressionParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleConcatenationExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParamRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"ConcatenationExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSay
entryRuleSay returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSayRule()); }
	 iv_ruleSay=ruleSay 
	 { $current=$iv_ruleSay.current; } 
	 EOF 
;

// Rule Say
ruleSay returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'Say' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getSayAccess().getNameSayKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSayRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "Say");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSayAccess().getThatConcatenationExpressionParserRuleCall_1_0()); 
	    }
		lv_that_1_0=ruleConcatenationExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSayRule());
	        }
       		set(
       			$current, 
       			"that",
        		lv_that_1_0, 
        		"ConcatenationExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSayAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleSms
entryRuleSms returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSmsRule()); }
	 iv_ruleSms=ruleSms 
	 { $current=$iv_ruleSms.current; } 
	 EOF 
;

// Rule Sms
ruleSms returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'Sms' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getSmsAccess().getNameSmsKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSmsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "Sms");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSmsAccess().getValueConcatenationExpressionParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleConcatenationExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSmsRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"ConcatenationExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='to' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSmsAccess().getToKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSmsAccess().getToConcatenationExpressionParserRuleCall_3_0()); 
	    }
		lv_to_3_0=ruleConcatenationExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSmsRule());
	        }
       		set(
       			$current, 
       			"to",
        		lv_to_3_0, 
        		"ConcatenationExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSmsAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleEmail
entryRuleEmail returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEmailRule()); }
	 iv_ruleEmail=ruleEmail 
	 { $current=$iv_ruleEmail.current; } 
	 EOF 
;

// Rule Email
ruleEmail returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'Email' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getEmailAccess().getNameEmailKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEmailRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "Email");
	    }

)
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEmailAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='subject' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEmailAccess().getSubjectKeyword_2());
    }
	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEmailAccess().getColonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEmailAccess().getTitleConcatenationExpressionParserRuleCall_4_0()); 
	    }
		lv_title_4_0=ruleConcatenationExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEmailRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_4_0, 
        		"ConcatenationExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEmailAccess().getCommaKeyword_5());
    }
	otherlv_6='from' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEmailAccess().getFromKeyword_6());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEmailAccess().getColonKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEmailAccess().getFromConcatenationExpressionParserRuleCall_8_0()); 
	    }
		lv_from_8_0=ruleConcatenationExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEmailRule());
	        }
       		set(
       			$current, 
       			"from",
        		lv_from_8_0, 
        		"ConcatenationExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getEmailAccess().getCommaKeyword_9());
    }
	otherlv_10='message' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getEmailAccess().getMessageKeyword_10());
    }
	otherlv_11=':' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getEmailAccess().getColonKeyword_11());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEmailAccess().getValueConcatenationExpressionParserRuleCall_12_0()); 
	    }
		lv_value_12_0=ruleConcatenationExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEmailRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_12_0, 
        		"ConcatenationExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getEmailAccess().getRightCurlyBracketKeyword_13());
    }
	otherlv_14='to' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getEmailAccess().getToKeyword_14());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEmailAccess().getToConcatenationExpressionParserRuleCall_15_0()); 
	    }
		lv_to_15_0=ruleConcatenationExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEmailRule());
	        }
       		set(
       			$current, 
       			"to",
        		lv_to_15_0, 
        		"ConcatenationExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_16=';' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getEmailAccess().getSemicolonKeyword_16());
    }
)
;





// Entry rule entryRuleTransition
entryRuleTransition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransitionRule()); }
	 iv_ruleTransition=ruleTransition 
	 { $current=$iv_ruleTransition.current; } 
	 EOF 
;

// Rule Transition
ruleTransition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'GoTo' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getTransitionAccess().getNameGoToKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "GoTo");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getTransitionAccess().getTargetStateCrossReference_1_0()); 
	}

)
)	otherlv_2='when' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTransitionAccess().getWhenKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTransitionAccess().getEventEVENTParserRuleCall_3_0()); 
	    }
		lv_event_3_0=ruleEVENT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTransitionRule());
	        }
       		set(
       			$current, 
       			"event",
        		lv_event_3_0, 
        		"EVENT");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTransitionAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleIfExp
entryRuleIfExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfExpRule()); }
	 iv_ruleIfExp=ruleIfExp 
	 { $current=$iv_ruleIfExp.current; } 
	 EOF 
;

// Rule IfExp
ruleIfExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getIfExpAccess().getBlockCondBlockParserRuleCall_0_0()); 
	    }
		lv_block_0_0=ruleCondBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfExpRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_0_0, 
        		"CondBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='else' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIfExpAccess().getElseKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfExpAccess().getBlocksCondBlockParserRuleCall_1_1_0()); 
	    }
		lv_blocks_2_0=ruleCondBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfExpRule());
	        }
       		add(
       			$current, 
       			"blocks",
        		lv_blocks_2_0, 
        		"CondBlock");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_3='else' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIfExpAccess().getElseKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfExpAccess().getDefaultBlockBlockParserRuleCall_2_1_0()); 
	    }
		lv_defaultBlock_4_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfExpRule());
	        }
       		set(
       			$current, 
       			"defaultBlock",
        		lv_defaultBlock_4_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleCondBlock
entryRuleCondBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCondBlockRule()); }
	 iv_ruleCondBlock=ruleCondBlock 
	 { $current=$iv_ruleCondBlock.current; } 
	 EOF 
;

// Rule CondBlock
ruleCondBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='if' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCondBlockAccess().getIfKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCondBlockAccess().getCondTerminalBoolExpressionParserRuleCall_1_0()); 
	    }
		lv_cond_1_0=ruleTerminalBoolExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCondBlockRule());
	        }
       		set(
       			$current, 
       			"cond",
        		lv_cond_1_0, 
        		"TerminalBoolExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCondBlockAccess().getActionBlockParserRuleCall_2_0()); 
	    }
		lv_action_2_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCondBlockRule());
	        }
       		set(
       			$current, 
       			"action",
        		lv_action_2_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	 iv_ruleBlock=ruleBlock 
	 { $current=$iv_ruleBlock.current; } 
	 EOF 
;

// Rule Block
ruleBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBlockAccess().getBlockAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBlockAccess().getStaAbstractElementParserRuleCall_2_0()); 
	    }
		lv_sta_2_0=ruleAbstractElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlockRule());
	        }
       		add(
       			$current, 
       			"sta",
        		lv_sta_2_0, 
        		"AbstractElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleBoolExpression
entryRuleBoolExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoolExpressionRule()); }
	 iv_ruleBoolExpression=ruleBoolExpression 
	 { $current=$iv_ruleBoolExpression.current; } 
	 EOF 
;

// Rule BoolExpression
ruleBoolExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBoolExpressionAccess().getTerminalBoolExpressionParserRuleCall_0()); 
    }
    this_TerminalBoolExpression_0=ruleTerminalBoolExpression
    { 
        $current = $this_TerminalBoolExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getBoolExpressionAccess().getOperationBoolLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=RULE_LOGIC_WORD
		{
			newLeafNode(lv_op_2_0, grammarAccess.getBoolExpressionAccess().getOpLOGIC_WORDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBoolExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"LOGIC_WORD");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBoolExpressionAccess().getRightBoolExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleBoolExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoolExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"BoolExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleTerminalBoolExpression
entryRuleTerminalBoolExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTerminalBoolExpressionRule()); }
	 iv_ruleTerminalBoolExpression=ruleTerminalBoolExpression 
	 { $current=$iv_ruleTerminalBoolExpression.current; } 
	 EOF 
;

// Rule TerminalBoolExpression
ruleTerminalBoolExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTerminalBoolExpressionAccess().getBoolLiteralParserRuleCall_0()); 
    }
    this_BoolLiteral_0=ruleBoolLiteral
    { 
        $current = $this_BoolLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTerminalBoolExpressionAccess().getCompareExpressionParserRuleCall_1()); 
    }
    this_CompareExpression_1=ruleCompareExpression
    { 
        $current = $this_CompareExpression_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTerminalBoolExpressionAccess().getNegExpressionParserRuleCall_2()); 
    }
    this_NegExpression_2=ruleNegExpression
    { 
        $current = $this_NegExpression_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTerminalBoolExpressionAccess().getLiteralParserRuleCall_3()); 
    }
    this_Literal_3=ruleLiteral
    { 
        $current = $this_Literal_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTerminalBoolExpressionAccess().getBracketsParserRuleCall_4()); 
    }
    this_Brackets_4=ruleBrackets
    { 
        $current = $this_Brackets_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTerminalBoolExpressionAccess().getCALLSTATUSParserRuleCall_5()); 
    }
    this_CALLSTATUS_5=ruleCALLSTATUS
    { 
        $current = $this_CALLSTATUS_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBrackets
entryRuleBrackets returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBracketsRule()); }
	 iv_ruleBrackets=ruleBrackets 
	 { $current=$iv_ruleBrackets.current; } 
	 EOF 
;

// Rule Brackets
ruleBrackets returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_open_0_0=RULE_OBRACKET
		{
			newLeafNode(lv_open_0_0, grammarAccess.getBracketsAccess().getOpenOBRACKETTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBracketsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"open",
        		lv_open_0_0, 
        		"OBRACKET");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBracketsAccess().getObjBoolExpressionParserRuleCall_1_0()); 
	    }
		lv_obj_1_0=ruleBoolExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBracketsRule());
	        }
       		set(
       			$current, 
       			"obj",
        		lv_obj_1_0, 
        		"BoolExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_close_2_0=RULE_CBRACKET
		{
			newLeafNode(lv_close_2_0, grammarAccess.getBracketsAccess().getCloseCBRACKETTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBracketsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"close",
        		lv_close_2_0, 
        		"CBRACKET");
	    }

)
))
;





// Entry rule entryRuleCompareExpression
entryRuleCompareExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompareExpressionRule()); }
	 iv_ruleCompareExpression=ruleCompareExpression 
	 { $current=$iv_ruleCompareExpression.current; } 
	 EOF 
;

// Rule CompareExpression
ruleCompareExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCompareExpressionAccess().getLeftLiteralAbsParserRuleCall_0_0()); 
	    }
		lv_left_0_0=ruleLiteralAbs		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompareExpressionRule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_0_0, 
        		"LiteralAbs");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_op_1_0=RULE_COMPARE
		{
			newLeafNode(lv_op_1_0, grammarAccess.getCompareExpressionAccess().getOpCOMPARETerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCompareExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_1_0, 
        		"COMPARE");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCompareExpressionAccess().getRightLiteralAbsParserRuleCall_2_0()); 
	    }
		lv_right_2_0=ruleLiteralAbs		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompareExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_2_0, 
        		"LiteralAbs");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleNegExpression
entryRuleNegExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNegExpressionRule()); }
	 iv_ruleNegExpression=ruleNegExpression 
	 { $current=$iv_ruleNegExpression.current; } 
	 EOF 
;

// Rule NegExpression
ruleNegExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_op_0_0=RULE_NEGATION
		{
			newLeafNode(lv_op_0_0, grammarAccess.getNegExpressionAccess().getOpNEGATIONTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNegExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_0_0, 
        		"NEGATION");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNegExpressionAccess().getObjTerminalBoolExpressionParserRuleCall_1_0()); 
	    }
		lv_obj_1_0=ruleTerminalBoolExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNegExpressionRule());
	        }
       		set(
       			$current, 
       			"obj",
        		lv_obj_1_0, 
        		"TerminalBoolExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMathExpression
entryRuleMathExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMathExpressionRule()); }
	 iv_ruleMathExpression=ruleMathExpression 
	 { $current=$iv_ruleMathExpression.current; } 
	 EOF 
;

// Rule MathExpression
ruleMathExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMathExpressionAccess().getMathTerminalParserRuleCall_0()); 
    }
    this_MathTerminal_0=ruleMathTerminal
    { 
        $current = $this_MathTerminal_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getMathExpressionAccess().getOperationLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=RULE_MATH
		{
			newLeafNode(lv_op_2_0, grammarAccess.getMathExpressionAccess().getOpMATHTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMathExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"MATH");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMathExpressionAccess().getRightMathExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleMathExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMathExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"MathExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleMathTerminal
entryRuleMathTerminal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMathTerminalRule()); }
	 iv_ruleMathTerminal=ruleMathTerminal 
	 { $current=$iv_ruleMathTerminal.current; } 
	 EOF 
;

// Rule MathTerminal
ruleMathTerminal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMathTerminalAccess().getMathBracketsParserRuleCall_0()); 
    }
    this_MathBrackets_0=ruleMathBrackets
    { 
        $current = $this_MathBrackets_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMathTerminalAccess().getLiteralParserRuleCall_1()); 
    }
    this_Literal_1=ruleLiteral
    { 
        $current = $this_Literal_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMathTerminalAccess().getNumLiteralParserRuleCall_2()); 
    }
    this_NumLiteral_2=ruleNumLiteral
    { 
        $current = $this_NumLiteral_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleMathBrackets
entryRuleMathBrackets returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMathBracketsRule()); }
	 iv_ruleMathBrackets=ruleMathBrackets 
	 { $current=$iv_ruleMathBrackets.current; } 
	 EOF 
;

// Rule MathBrackets
ruleMathBrackets returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_open_0_0=RULE_OBRACKET
		{
			newLeafNode(lv_open_0_0, grammarAccess.getMathBracketsAccess().getOpenOBRACKETTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMathBracketsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"open",
        		lv_open_0_0, 
        		"OBRACKET");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMathBracketsAccess().getObjMathExpressionParserRuleCall_1_0()); 
	    }
		lv_obj_1_0=ruleMathExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMathBracketsRule());
	        }
       		set(
       			$current, 
       			"obj",
        		lv_obj_1_0, 
        		"MathExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_close_2_0=RULE_CBRACKET
		{
			newLeafNode(lv_close_2_0, grammarAccess.getMathBracketsAccess().getCloseCBRACKETTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMathBracketsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"close",
        		lv_close_2_0, 
        		"CBRACKET");
	    }

)
))
;





// Entry rule entryRuleConcatenationExpression
entryRuleConcatenationExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConcatenationExpressionRule()); }
	 iv_ruleConcatenationExpression=ruleConcatenationExpression 
	 { $current=$iv_ruleConcatenationExpression.current; } 
	 EOF 
;

// Rule ConcatenationExpression
ruleConcatenationExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getConcatenationExpressionAccess().getConcatenationTerminalParserRuleCall_0()); 
    }
    this_ConcatenationTerminal_0=ruleConcatenationTerminal
    { 
        $current = $this_ConcatenationTerminal_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getConcatenationExpressionAccess().getConcatenationLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=RULE_CONCATENATION
		{
			newLeafNode(lv_op_2_0, grammarAccess.getConcatenationExpressionAccess().getOpCONCATENATIONTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConcatenationExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"CONCATENATION");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConcatenationExpressionAccess().getRightConcatenationExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleConcatenationExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConcatenationExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"ConcatenationExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleConcatenationTerminal
entryRuleConcatenationTerminal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConcatenationTerminalRule()); }
	 iv_ruleConcatenationTerminal=ruleConcatenationTerminal 
	 { $current=$iv_ruleConcatenationTerminal.current; } 
	 EOF 
;

// Rule ConcatenationTerminal
ruleConcatenationTerminal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getConcatenationTerminalAccess().getConcatenationBracketsParserRuleCall_0()); 
    }
    this_ConcatenationBrackets_0=ruleConcatenationBrackets
    { 
        $current = $this_ConcatenationBrackets_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConcatenationTerminalAccess().getLiteralAbsParserRuleCall_1()); 
    }
    this_LiteralAbs_1=ruleLiteralAbs
    { 
        $current = $this_LiteralAbs_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleConcatenationBrackets
entryRuleConcatenationBrackets returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConcatenationBracketsRule()); }
	 iv_ruleConcatenationBrackets=ruleConcatenationBrackets 
	 { $current=$iv_ruleConcatenationBrackets.current; } 
	 EOF 
;

// Rule ConcatenationBrackets
ruleConcatenationBrackets returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_open_0_0=RULE_OBRACKET
		{
			newLeafNode(lv_open_0_0, grammarAccess.getConcatenationBracketsAccess().getOpenOBRACKETTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConcatenationBracketsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"open",
        		lv_open_0_0, 
        		"OBRACKET");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConcatenationBracketsAccess().getObjConcatenationExpressionParserRuleCall_1_0()); 
	    }
		lv_obj_1_0=ruleConcatenationExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConcatenationBracketsRule());
	        }
       		set(
       			$current, 
       			"obj",
        		lv_obj_1_0, 
        		"ConcatenationExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_close_2_0=RULE_CBRACKET
		{
			newLeafNode(lv_close_2_0, grammarAccess.getConcatenationBracketsAccess().getCloseCBRACKETTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConcatenationBracketsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"close",
        		lv_close_2_0, 
        		"CBRACKET");
	    }

)
))
;





// Entry rule entryRuleStringVariable
entryRuleStringVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringVariableRule()); }
	 iv_ruleStringVariable=ruleStringVariable 
	 { $current=$iv_ruleStringVariable.current; } 
	 EOF 
;

// Rule StringVariable
ruleStringVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='String' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStringVariableAccess().getStringKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStringVariableAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringVariableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)((	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStringVariableAccess().getEqualsSignKeyword_2_0_0());
    }

    |	otherlv_3=' = ' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStringVariableAccess().getSpaceEqualsSignSpaceKeyword_2_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStringVariableAccess().getValueConcatenationExpressionParserRuleCall_2_1_0()); 
	    }
		lv_value_4_0=ruleConcatenationExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringVariableRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"ConcatenationExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStringVariableAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleNumVariable
entryRuleNumVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumVariableRule()); }
	 iv_ruleNumVariable=ruleNumVariable 
	 { $current=$iv_ruleNumVariable.current; } 
	 EOF 
;

// Rule NumVariable
ruleNumVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Num' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNumVariableAccess().getNumKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getNumVariableAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumVariableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)((	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNumVariableAccess().getEqualsSignKeyword_2_0_0());
    }

    |	otherlv_3=' = ' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getNumVariableAccess().getSpaceEqualsSignSpaceKeyword_2_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNumVariableAccess().getValueMathExpressionParserRuleCall_2_1_0()); 
	    }
		lv_value_4_0=ruleMathExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumVariableRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"MathExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getNumVariableAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleBoolVariable
entryRuleBoolVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoolVariableRule()); }
	 iv_ruleBoolVariable=ruleBoolVariable 
	 { $current=$iv_ruleBoolVariable.current; } 
	 EOF 
;

// Rule BoolVariable
ruleBoolVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Bool' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBoolVariableAccess().getBoolKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getBoolVariableAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBoolVariableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)((	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBoolVariableAccess().getEqualsSignKeyword_2_0_0());
    }

    |	otherlv_3=' = ' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBoolVariableAccess().getSpaceEqualsSignSpaceKeyword_2_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBoolVariableAccess().getValueBoolExpressionParserRuleCall_2_1_0()); 
	    }
		lv_value_4_0=ruleBoolExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoolVariableRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"BoolExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBoolVariableAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleConstant
entryRuleConstant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantRule()); }
	 iv_ruleConstant=ruleConstant 
	 { $current=$iv_ruleConstant.current; } 
	 EOF 
;

// Rule Constant
ruleConstant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Const' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConstantAccess().getConstKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getConstantAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConstantAccess().getEqualsSignKeyword_2_0());
    }

    |	otherlv_3=' = ' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConstantAccess().getSpaceEqualsSignSpaceKeyword_2_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantAccess().getValuePrimitiveParserRuleCall_3_0()); 
	    }
		lv_value_4_0=rulePrimitive		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"Primitive");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getConstantAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRulePrimitive
entryRulePrimitive returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimitiveRule()); }
	 iv_rulePrimitive=rulePrimitive 
	 { $current=$iv_rulePrimitive.current; } 
	 EOF 
;

// Rule Primitive
rulePrimitive returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPrimitiveAccess().getStringLiteralParserRuleCall_0()); 
    }
    this_StringLiteral_0=ruleStringLiteral
    { 
        $current = $this_StringLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimitiveAccess().getBoolLiteralParserRuleCall_1()); 
    }
    this_BoolLiteral_1=ruleBoolLiteral
    { 
        $current = $this_BoolLiteral_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimitiveAccess().getNumLiteralParserRuleCall_2()); 
    }
    this_NumLiteral_2=ruleNumLiteral
    { 
        $current = $this_NumLiteral_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;







// Entry rule entryRuleLiteralAbs
entryRuleLiteralAbs returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralAbsRule()); }
	 iv_ruleLiteralAbs=ruleLiteralAbs 
	 { $current=$iv_ruleLiteralAbs.current; } 
	 EOF 
;

// Rule LiteralAbs
ruleLiteralAbs returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLiteralAbsAccess().getLiteralParserRuleCall_0()); 
    }
    this_Literal_0=ruleLiteral
    { 
        $current = $this_Literal_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAbsAccess().getPrimitiveParserRuleCall_1()); 
    }
    this_Primitive_1=rulePrimitive
    { 
        $current = $this_Primitive_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	 iv_ruleLiteral=ruleLiteral 
	 { $current=$iv_ruleLiteral.current; } 
	 EOF 
;

// Rule Literal
ruleLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getLiteralAccess().getVVarsCrossReference_0_0()); 
	}

)
)
    |(
(
		lv_nul_1_0=RULE_NULL
		{
			newLeafNode(lv_nul_1_0, grammarAccess.getLiteralAccess().getNulNULLTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nul",
        		lv_nul_1_0, 
        		"NULL");
	    }

)
)
    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getSESSIONParserRuleCall_2()); 
    }
    this_SESSION_2=ruleSESSION
    { 
        $current = $this_SESSION_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBoolLiteral
entryRuleBoolLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoolLiteralRule()); }
	 iv_ruleBoolLiteral=ruleBoolLiteral 
	 { $current=$iv_ruleBoolLiteral.current; } 
	 EOF 
;

// Rule BoolLiteral
ruleBoolLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBoolLiteralAccess().getBoolLiteralAction_0(),
            $current);
    }
)(
(
		lv_value_1_0=RULE_BOOL
		{
			newLeafNode(lv_value_1_0, grammarAccess.getBoolLiteralAccess().getValueBOOLTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBoolLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"BOOL");
	    }

)
))
;





// Entry rule entryRuleNumLiteral
entryRuleNumLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumLiteralRule()); }
	 iv_ruleNumLiteral=ruleNumLiteral 
	 { $current=$iv_ruleNumLiteral.current; } 
	 EOF 
;

// Rule NumLiteral
ruleNumLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getNumLiteralAccess().getNumLiteralAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNumLiteralAccess().getValueNumberParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumLiteralRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"Number");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	 iv_ruleStringLiteral=ruleStringLiteral 
	 { $current=$iv_ruleStringLiteral.current; } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStringLiteralAccess().getStringLiteralAction_0(),
            $current);
    }
)(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleNumber
entryRuleNumber returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumberRule()); } 
	 iv_ruleNumber=ruleNumber 
	 { $current=$iv_ruleNumber.current.getText(); }  
	 EOF 
;

// Rule Number
ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_DOUBLE_0=RULE_DOUBLE    {
		$current.merge(this_DOUBLE_0);
    }

    { 
    newLeafNode(this_DOUBLE_0, grammarAccess.getNumberAccess().getDOUBLETerminalRuleCall_0()); 
    }

    |    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleEVENT
entryRuleEVENT returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEVENTRule()); }
	 iv_ruleEVENT=ruleEVENT 
	 { $current=$iv_ruleEVENT.current; } 
	 EOF 
;

// Rule EVENT
ruleEVENT returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'HANGUP' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getEVENTAccess().getNameHANGUPKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEVENTRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "HANGUP");
	    }

)
)
    |(
(
		lv_name_1_0=	'COMPLETED' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getEVENTAccess().getNameCOMPLETEDKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEVENTRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "COMPLETED");
	    }

)
)
    |(
(
		lv_name_2_0=	'ERROR' 
    {
        newLeafNode(lv_name_2_0, grammarAccess.getEVENTAccess().getNameERRORKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEVENTRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_2_0, "ERROR");
	    }

)
)
    |(
(
		lv_name_3_0=	'TIMES' 
    {
        newLeafNode(lv_name_3_0, grammarAccess.getEVENTAccess().getNameTIMESKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEVENTRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_3_0, "TIMES");
	    }

)
)
    |(
(
		lv_name_4_0=	'TIMEOUT' 
    {
        newLeafNode(lv_name_4_0, grammarAccess.getEVENTAccess().getNameTIMEOUTKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEVENTRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_4_0, "TIMEOUT");
	    }

)
))
;





// Entry rule entryRuleSESSION
entryRuleSESSION returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSESSIONRule()); }
	 iv_ruleSESSION=ruleSESSION 
	 { $current=$iv_ruleSESSION.current; } 
	 EOF 
;

// Rule SESSION
ruleSESSION returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'CALLER' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getSESSIONAccess().getNameCALLERKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSESSIONRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "CALLER");
	    }

)
)
    |(
(
		lv_name_1_0=	'LASTSTATE' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getSESSIONAccess().getNameLASTSTATEKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSESSIONRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "LASTSTATE");
	    }

)
)
    |(
(
		lv_name_2_0=	'TIME' 
    {
        newLeafNode(lv_name_2_0, grammarAccess.getSESSIONAccess().getNameTIMEKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSESSIONRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_2_0, "TIME");
	    }

)
)
    |(
(
		lv_name_3_0=	'CALLED' 
    {
        newLeafNode(lv_name_3_0, grammarAccess.getSESSIONAccess().getNameCALLEDKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSESSIONRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_3_0, "CALLED");
	    }

)
)
    |(
(
		lv_name_4_0=	'ANSWER' 
    {
        newLeafNode(lv_name_4_0, grammarAccess.getSESSIONAccess().getNameANSWERKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSESSIONRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_4_0, "ANSWER");
	    }

)
)
    |(
(
		lv_name_5_0=	'DIGITS' 
    {
        newLeafNode(lv_name_5_0, grammarAccess.getSESSIONAccess().getNameDIGITSKeyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSESSIONRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_5_0, "DIGITS");
	    }

)
)
    |(
(
		lv_name_6_0=	'RECORD' 
    {
        newLeafNode(lv_name_6_0, grammarAccess.getSESSIONAccess().getNameRECORDKeyword_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSESSIONRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_6_0, "RECORD");
	    }

)
))
;





// Entry rule entryRuleCALLSTATUS
entryRuleCALLSTATUS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCALLSTATUSRule()); }
	 iv_ruleCALLSTATUS=ruleCALLSTATUS 
	 { $current=$iv_ruleCALLSTATUS.current; } 
	 EOF 
;

// Rule CALLSTATUS
ruleCALLSTATUS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'RINGING' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getCALLSTATUSAccess().getNameRINGINGKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCALLSTATUSRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "RINGING");
	    }

)
)
    |(
(
		lv_name_1_0=	'IN-PROGRESS' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getCALLSTATUSAccess().getNameINPROGRESSKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCALLSTATUSRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "IN-PROGRESS");
	    }

)
)
    |(
(
		lv_name_2_0=	'DISCONNECTED' 
    {
        newLeafNode(lv_name_2_0, grammarAccess.getCALLSTATUSAccess().getNameDISCONNECTEDKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCALLSTATUSRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_2_0, "DISCONNECTED");
	    }

)
)
    |(
(
		lv_name_3_0=	'FAILED' 
    {
        newLeafNode(lv_name_3_0, grammarAccess.getCALLSTATUSAccess().getNameFAILEDKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCALLSTATUSRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_3_0, "FAILED");
	    }

)
))
;





RULE_DOUBLE : RULE_INT '.' RULE_INT;

RULE_NULL : 'null';

RULE_BOOL : ('true'|'false');

RULE_LOGIC_WORD : ('&&'|'||');

RULE_COMPARE : ('<'|'=='|'>'|'<='|'>='|'!=');

RULE_MATH : ('*'|'/'|'-'|'+');

RULE_CONCATENATION : '.';

RULE_NEGATION : '!';

RULE_OBRACKET : '(';

RULE_CBRACKET : ')';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


